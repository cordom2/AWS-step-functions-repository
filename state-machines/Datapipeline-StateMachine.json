{
  "Comment": "An example of the Amazon States Language using a parallel state to execute two branches at the same time.  Will check for forecaster_seg every 15 minutes for 3 hours after starting state machine execution.  Necessary Input Parameters: {'S3Bucket': 'String', 'S3Key': 'String', 'segment-counts-input': {'Name': 'String', CLUSTER_CONFIGS}, 'id-analytics-input': {'Name': 'String', CLUSTER_CONFIGS} }",
  "StartAt": "Setup",
  "States": {
    "Setup": {
      "Type": "Pass",
      "Result": {
        "checkNumber": 0
      },
      "ResultPath": "$.setup",
      "Next": "Check forecaster_seg"
    },
    "Check forecaster_seg": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:849776797214:function:check-s3-file-exists",
      "Next": "Continue?"
    },
    "Continue?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.fileExists",
          "BooleanEquals": true,
          "Next": "Parallel"
        },
        {
          "Variable": "$.fileExists",
          "BooleanEquals": false,
          "Next": "Checks Count"
        }
      ]
    },
    "Wait": {
      "Type": "Wait",
      "Seconds": 900,
      "Next": "Check forecaster_seg"
    },
    "Checks Count": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.setup.checkNumber",
          "NumericLessThan": 13,
          "Next": "Update checkNumber"
        }
      ],
      "Default": "forecaster_seg not updated"
    },
    "Update checkNumber": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:us-east-1:849776797214:function:datapipeline-update-checkNumber",
      "Next": "Wait"
    },
    "forecaster_seg not updated": {
      "Type": "Pass",
      "Result": "No updated forecaster_seg found. Stopping job.",
      "End": true
    },
    "Parallel": {
      "Type": "Parallel",
      "Next": "Successfully Triggered EMR Jobs",
      "Branches": [
        {
          "StartAt": "Run Id-Analytics",
          "States": {
            "Run Id-Analytics": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution",
              "Parameters": {
                "StateMachineArn": "arn:aws:states:us-east-1:849776797214:stateMachine:datapipeline-emr-pipe",
                "Input": {
                  "emr-configs-input.$": "$.id-analytics-input"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "Run Segment-Counts",
          "States": {
            "Run Segment-Counts": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution",
              "Parameters": {
                "StateMachineArn": "arn:aws:states:us-east-1:849776797214:stateMachine:datapipeline-emr-pipe",
                "Input": {
                  "emr-configs-input.$": "$.segment-counts-input"
                }
              },
              "End": true
            }
          }
        }
      ]
    },
    "Successfully Triggered EMR Jobs": {
      "Type": "Succeed"
    }
  }
}
